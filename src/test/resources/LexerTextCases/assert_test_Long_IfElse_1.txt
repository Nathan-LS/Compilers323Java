token: Separator    lexeme: '$$'         line:1
token: Keyword      lexeme: 'int'        line:2
token: Identifier   lexeme: 'a'          line:2
token: Separator    lexeme: ','          line:2
token: Identifier   lexeme: 'b'          line:2
token: Separator    lexeme: ','          line:2
token: Identifier   lexeme: 'c'          line:2
token: Separator    lexeme: ';'          line:2
token: Keyword      lexeme: 'boolean'    line:3
token: Identifier   lexeme: 'test'       line:3
token: Separator    lexeme: ','          line:3
token: Identifier   lexeme: 'variables'  line:3
token: Separator    lexeme: ','          line:3
token: Identifier   lexeme: 'dummyVar'   line:3
token: Separator    lexeme: ';'          line:3
token: Identifier   lexeme: 'dummyVar'   line:5
token: Operator     lexeme: '='          line:5
token: Keyword      lexeme: 'false'      line:5
token: Separator    lexeme: ';'          line:5
token: Keyword      lexeme: 'get'        line:7
token: Separator    lexeme: '('          line:7
token: Identifier   lexeme: 'c'          line:7
token: Separator    lexeme: ','          line:7
token: Identifier   lexeme: 'a'          line:7
token: Separator    lexeme: ','          line:7
token: Identifier   lexeme: 'test'       line:7
token: Separator    lexeme: ')'          line:7
token: Separator    lexeme: ';'          line:7
token: Separator    lexeme: '{'          line:8
token: Keyword      lexeme: 'if'         line:9
token: Separator    lexeme: '('          line:9
token: Identifier   lexeme: 'c'          line:9
token: Operator     lexeme: '/'          line:9
token: Integer      lexeme: '2'          line:9
token: Operator     lexeme: '=='         line:9
token: Identifier   lexeme: 'a'          line:9
token: Operator     lexeme: '+'          line:9
token: Integer      lexeme: '1'          line:9
token: Separator    lexeme: ')'          line:9
token: Separator    lexeme: '{'          line:10
token: Identifier   lexeme: 'variables'  line:11
token: Operator     lexeme: '='          line:11
token: Keyword      lexeme: 'false'      line:11
token: Separator    lexeme: ';'          line:11
token: Separator    lexeme: '}'          line:12
token: Keyword      lexeme: 'else'       line:13
token: Separator    lexeme: '{'          line:14
token: Keyword      lexeme: 'if'         line:15
token: Separator    lexeme: '('          line:15
token: Identifier   lexeme: 'c'          line:15
token: Operator     lexeme: '=='         line:15
token: Identifier   lexeme: 'a'          line:15
token: Operator     lexeme: '+'          line:15
token: Integer      lexeme: '2'          line:15
token: Separator    lexeme: ')'          line:15
token: Separator    lexeme: '{'          line:16
token: Identifier   lexeme: 'variables'  line:17
token: Operator     lexeme: '='          line:17
token: Keyword      lexeme: 'true'       line:17
token: Separator    lexeme: ';'          line:17
token: Separator    lexeme: '}'          line:18
token: Keyword      lexeme: 'else'       line:19
token: Separator    lexeme: '{'          line:20
token: Identifier   lexeme: 'dummyVar'   line:21
token: Operator     lexeme: '='          line:21
token: Keyword      lexeme: 'true'       line:21
token: Separator    lexeme: ';'          line:21
token: Separator    lexeme: '}'          line:22
token: Keyword      lexeme: 'ifend'      line:22
token: Separator    lexeme: '}'          line:23
token: Keyword      lexeme: 'ifend'      line:23
token: Separator    lexeme: '}'          line:24
token: Keyword      lexeme: 'put'        line:25
token: Separator    lexeme: '('          line:25
token: Identifier   lexeme: 'a'          line:25
token: Separator    lexeme: ')'          line:25
token: Separator    lexeme: ';'          line:25
token: Keyword      lexeme: 'put'        line:26
token: Separator    lexeme: '('          line:26
token: Identifier   lexeme: 'b'          line:26
token: Separator    lexeme: ')'          line:26
token: Separator    lexeme: ';'          line:26
token: Keyword      lexeme: 'put'        line:27
token: Separator    lexeme: '('          line:27
token: Identifier   lexeme: 'c'          line:27
token: Separator    lexeme: ')'          line:27
token: Separator    lexeme: ';'          line:27
token: Keyword      lexeme: 'put'        line:28
token: Separator    lexeme: '('          line:28
token: Identifier   lexeme: 'a'          line:28
token: Operator     lexeme: '+'          line:28
token: Identifier   lexeme: 'b'          line:28
token: Operator     lexeme: '+'          line:28
token: Identifier   lexeme: 'c'          line:28
token: Separator    lexeme: ')'          line:28
token: Separator    lexeme: ';'          line:28
token: Keyword      lexeme: 'put'        line:29
token: Separator    lexeme: '('          line:29
token: Identifier   lexeme: 'a'          line:29
token: Operator     lexeme: '/'          line:29
token: Identifier   lexeme: 'b'          line:29
token: Operator     lexeme: '*'          line:29
token: Identifier   lexeme: 'c'          line:29
token: Separator    lexeme: ')'          line:29
token: Separator    lexeme: ';'          line:29
token: Keyword      lexeme: 'put'        line:30
token: Separator    lexeme: '('          line:30
token: Identifier   lexeme: 'a'          line:30
token: Operator     lexeme: '*'          line:30
token: Identifier   lexeme: 'b'          line:30
token: Operator     lexeme: '/'          line:30
token: Identifier   lexeme: 'c'          line:30
token: Separator    lexeme: ')'          line:30
token: Separator    lexeme: ';'          line:30
token: Keyword      lexeme: 'put'        line:31
token: Separator    lexeme: '('          line:31
token: Identifier   lexeme: 'a'          line:31
token: Operator     lexeme: '-'          line:31
token: Identifier   lexeme: 'b'          line:31
token: Operator     lexeme: '+'          line:31
token: Identifier   lexeme: 'c'          line:31
token: Separator    lexeme: ')'          line:31
token: Separator    lexeme: ';'          line:31
token: Keyword      lexeme: 'put'        line:32
token: Separator    lexeme: '('          line:32
token: Identifier   lexeme: 'test'       line:32
token: Separator    lexeme: ')'          line:32
token: Separator    lexeme: ';'          line:32
token: Separator    lexeme: '$$'         line:33
