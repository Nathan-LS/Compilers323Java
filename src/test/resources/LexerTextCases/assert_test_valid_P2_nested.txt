token: Separator    lexeme: '$$'         line:2
token: Keyword      lexeme: 'int'        line:3
token: Identifier   lexeme: 'a'          line:3
token: Separator    lexeme: ';'          line:3
token: Keyword      lexeme: 'while'      line:4
token: Separator    lexeme: '('          line:4
token: Identifier   lexeme: 'a'          line:4
token: Operator     lexeme: '=>'         line:4
token: Integer      lexeme: '5'          line:4
token: Separator    lexeme: ')'          line:4
token: Separator    lexeme: '{'          line:4
token: Keyword      lexeme: 'while'      line:5
token: Separator    lexeme: '('          line:5
token: Identifier   lexeme: 'a'          line:5
token: Operator     lexeme: '=>'         line:5
token: Integer      lexeme: '5'          line:5
token: Separator    lexeme: ')'          line:5
token: Separator    lexeme: '{'          line:5
token: Keyword      lexeme: 'if'         line:6
token: Separator    lexeme: '('          line:6
token: Identifier   lexeme: 'a'          line:6
token: Operator     lexeme: '^='         line:6
token: Integer      lexeme: '5'          line:6
token: Separator    lexeme: ')'          line:6
token: Separator    lexeme: '{'          line:6
token: Keyword      lexeme: 'put'        line:7
token: Separator    lexeme: '('          line:7
token: Identifier   lexeme: 'a'          line:7
token: Separator    lexeme: ')'          line:7
token: Separator    lexeme: ';'          line:7
token: Separator    lexeme: '}'          line:8
token: Keyword      lexeme: 'else'       line:9
token: Separator    lexeme: '{'          line:9
token: Keyword      lexeme: 'if'         line:10
token: Separator    lexeme: '('          line:10
token: Identifier   lexeme: 'a'          line:10
token: Operator     lexeme: '^='         line:10
token: Integer      lexeme: '5'          line:10
token: Separator    lexeme: ')'          line:10
token: Separator    lexeme: '{'          line:10
token: Keyword      lexeme: 'put'        line:11
token: Separator    lexeme: '('          line:11
token: Identifier   lexeme: 'a'          line:11
token: Separator    lexeme: ')'          line:11
token: Separator    lexeme: ';'          line:11
token: Keyword      lexeme: 'if'         line:12
token: Separator    lexeme: '('          line:12
token: Identifier   lexeme: 'a'          line:12
token: Operator     lexeme: '^='         line:12
token: Integer      lexeme: '5'          line:12
token: Separator    lexeme: ')'          line:12
token: Separator    lexeme: '{'          line:12
token: Keyword      lexeme: 'put'        line:13
token: Separator    lexeme: '('          line:13
token: Identifier   lexeme: 'a'          line:13
token: Separator    lexeme: ')'          line:13
token: Separator    lexeme: ';'          line:13
token: Keyword      lexeme: 'if'         line:14
token: Separator    lexeme: '('          line:14
token: Identifier   lexeme: 'a'          line:14
token: Operator     lexeme: '^='         line:14
token: Integer      lexeme: '5'          line:14
token: Separator    lexeme: ')'          line:14
token: Separator    lexeme: '{'          line:14
token: Keyword      lexeme: 'put'        line:15
token: Separator    lexeme: '('          line:15
token: Identifier   lexeme: 'a'          line:15
token: Separator    lexeme: ')'          line:15
token: Separator    lexeme: ';'          line:15
token: Keyword      lexeme: 'if'         line:16
token: Separator    lexeme: '('          line:16
token: Identifier   lexeme: 'a'          line:16
token: Operator     lexeme: '^='         line:16
token: Integer      lexeme: '5'          line:16
token: Separator    lexeme: ')'          line:16
token: Separator    lexeme: '{'          line:16
token: Keyword      lexeme: 'put'        line:17
token: Separator    lexeme: '('          line:17
token: Identifier   lexeme: 'a'          line:17
token: Separator    lexeme: ')'          line:17
token: Separator    lexeme: ';'          line:17
token: Separator    lexeme: '}'          line:18
token: Keyword      lexeme: 'else'       line:18
token: Separator    lexeme: '{'          line:18
token: Identifier   lexeme: 'a'          line:19
token: Operator     lexeme: '='          line:19
token: Integer      lexeme: '6'          line:19
token: Separator    lexeme: ';'          line:19
token: Separator    lexeme: '}'          line:20
token: Keyword      lexeme: 'ifend'      line:20
token: Separator    lexeme: '}'          line:21
token: Keyword      lexeme: 'ifend'      line:21
token: Separator    lexeme: '}'          line:22
token: Keyword      lexeme: 'ifend'      line:22
token: Separator    lexeme: '}'          line:23
token: Keyword      lexeme: 'ifend'      line:23
token: Identifier   lexeme: 'a'          line:24
token: Operator     lexeme: '='          line:24
token: Integer      lexeme: '5'          line:24
token: Separator    lexeme: ';'          line:24
token: Keyword      lexeme: 'put'        line:25
token: Separator    lexeme: '('          line:25
token: Identifier   lexeme: 'a'          line:25
token: Operator     lexeme: '+'          line:25
token: Integer      lexeme: '5'          line:25
token: Operator     lexeme: '+'          line:25
token: Separator    lexeme: '('          line:25
token: Integer      lexeme: '10'         line:25
token: Operator     lexeme: '/'          line:25
token: Integer      lexeme: '5'          line:25
token: Separator    lexeme: ')'          line:25
token: Operator     lexeme: '-'          line:25
token: Integer      lexeme: '2'          line:25
token: Separator    lexeme: ')'          line:25
token: Separator    lexeme: ';'          line:25
token: Separator    lexeme: '}'          line:26
token: Keyword      lexeme: 'ifend'      line:26
token: Separator    lexeme: '}'          line:28
token: Keyword      lexeme: 'whileend'   line:28
token: Separator    lexeme: '}'          line:29
token: Keyword      lexeme: 'whileend'   line:29
token: Separator    lexeme: '$$'         line:30
